{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","isComplited","completed","classes","title","TodoList","todos","map","getUser","userId","usersFromServer","find","usersTodos","App","useState","setTodos","setTitle","setUserId","formErrorsTitle","setFormErrorsTitle","formErrorsUser","setFormErrorsUser","newId","length","Math","max","action","method","onSubmit","e","preventDefault","htmlFor","type","value","onChange","target","placeholder","disabled","onClick","newUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96cd1a19.chunk.js","sourcesContent":["export default [\r\n  {\r\n    id: 1,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me',\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io',\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz',\r\n  },\r\n];\r\n","import { User } from '../../types/User';\n\ntype UserInfoProps = {\n  user: User;\n};\n\nexport const UserInfo = ({ user }: UserInfoProps) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classes from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype TodoInfoProps = {\n  todo: Todo;\n};\n\nexport const TodoInfo = ({ todo }: TodoInfoProps) => {\n  const isComplited = todo.completed;\n  const className = classes({\n    TodoInfo: true,\n    'TodoInfo--completed': isComplited,\n  });\n\n  return (\n    <article\n      className={className}\n      data-id={todo.id}\n      key={todo.id}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype TodoListProps = {\n  todos: Todo[];\n};\n\nexport const TodoList = ({ todos }: TodoListProps) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => <TodoInfo key={todo.id} todo={todo} />)}\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find((user) => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const usersTodos: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(usersTodos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [formErrorsTitle, setFormErrorsTitle] = useState('');\n  const [formErrorsUser, setFormErrorsUser] = useState('');\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n  };\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setFormErrorsTitle('');\n  };\n\n  const handleUserIdChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+e.target.value);\n    setFormErrorsUser('');\n  };\n\n  const newId\n    = todos.length > 0 ? Math.max(...todos.map((todo) => todo.id)) + 1 : 1;\n\n  const handleAddTodo = () => {\n    if (!title) {\n      setFormErrorsTitle('Please enter a title');\n    }\n\n    if (userId === 0) {\n      setFormErrorsUser('Please choose a user');\n    }\n\n    if (!title || userId === 0) {\n      return;\n    }\n\n    const newUser = getUser(userId);\n\n    setTodos([\n      ...todos,\n      {\n        id: newId,\n        title,\n        userId,\n        completed: false,\n        user: newUser || null,\n      },\n    ]);\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            name=\"title\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitleChange}\n            placeholder=\"Enter a title\"\n          />\n          {formErrorsTitle && <span className=\"error\">{formErrorsTitle}</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userId\">User: </label>\n          <select\n            id=\"userId\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {formErrorsUser && <span className=\"error\">{formErrorsUser}</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\" onClick={handleAddTodo}>\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\r\n  {\r\n    id: 1,\r\n    title: 'delectus aut autem',\r\n    completed: true,\r\n    userId: 1,\r\n  },\r\n  {\r\n    id: 15,\r\n    title: 'some other todo',\r\n    completed: false,\r\n    userId: 1,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'quis ut nam facilis et officia qui',\r\n    completed: false,\r\n    userId: 4,\r\n  },\r\n];\r\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}